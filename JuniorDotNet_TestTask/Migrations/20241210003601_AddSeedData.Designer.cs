// <auto-generated />
using JuniorDotNet_TestTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JuniorDotNet_TestTask.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241210003601_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JuniorDotNet_TestTask.Models.EquipmentPlacementContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProcessEquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProductionFacilityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessEquipmentTypeId");

                    b.HasIndex("ProductionFacilityId");

                    b.ToTable("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("JuniorDotNet_TestTask.Models.ProcessEquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProcessEquipmentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = 50.0,
                            Code = "EQ1",
                            Name = "Type 1 Small Equipment"
                        },
                        new
                        {
                            Id = 2,
                            Area = 30.0,
                            Code = "EQ2",
                            Name = "Type 2 Compact Equipment"
                        },
                        new
                        {
                            Id = 3,
                            Area = 70.0,
                            Code = "EQ3",
                            Name = "Type 3 Large Equipment"
                        },
                        new
                        {
                            Id = 4,
                            Area = 120.0,
                            Code = "EQ4",
                            Name = "Type 4 Extra Large"
                        },
                        new
                        {
                            Id = 5,
                            Area = 15.0,
                            Code = "EQ5",
                            Name = "Type 5 High Density"
                        },
                        new
                        {
                            Id = 6,
                            Area = 45.0,
                            Code = "EQ6",
                            Name = "Type 6 Medium Equipment"
                        },
                        new
                        {
                            Id = 7,
                            Area = 90.0,
                            Code = "EQ7",
                            Name = "Type 7 Advanced"
                        },
                        new
                        {
                            Id = 8,
                            Area = 20.0,
                            Code = "EQ8",
                            Name = "Type 8 Lightweight"
                        },
                        new
                        {
                            Id = 9,
                            Area = 100.0,
                            Code = "EQ9",
                            Name = "Type 9 Custom"
                        },
                        new
                        {
                            Id = 10,
                            Area = 200.0,
                            Code = "EQ10",
                            Name = "Type 10 Extreme"
                        });
                });

            modelBuilder.Entity("JuniorDotNet_TestTask.Models.ProductionFacility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StandardArea")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "FAC1",
                            Name = "Factory 1",
                            StandardArea = 5000.0
                        },
                        new
                        {
                            Id = 2,
                            Code = "FAC2",
                            Name = "Factory 2",
                            StandardArea = 3000.0
                        },
                        new
                        {
                            Id = 3,
                            Code = "FAC3",
                            Name = "Factory 3",
                            StandardArea = 4000.0
                        },
                        new
                        {
                            Id = 4,
                            Code = "FAC4",
                            Name = "Factory 4",
                            StandardArea = 7000.0
                        },
                        new
                        {
                            Id = 5,
                            Code = "FAC5",
                            Name = "Factory 5",
                            StandardArea = 2500.0
                        },
                        new
                        {
                            Id = 6,
                            Code = "FAC6",
                            Name = "Factory 6",
                            StandardArea = 8000.0
                        },
                        new
                        {
                            Id = 7,
                            Code = "FAC7",
                            Name = "Factory 7",
                            StandardArea = 3500.0
                        },
                        new
                        {
                            Id = 8,
                            Code = "FAC8",
                            Name = "Factory 8",
                            StandardArea = 6000.0
                        },
                        new
                        {
                            Id = 9,
                            Code = "FAC9",
                            Name = "Factory 9",
                            StandardArea = 4500.0
                        },
                        new
                        {
                            Id = 10,
                            Code = "FAC10",
                            Name = "Factory 10",
                            StandardArea = 10000.0
                        });
                });

            modelBuilder.Entity("JuniorDotNet_TestTask.Models.EquipmentPlacementContract", b =>
                {
                    b.HasOne("JuniorDotNet_TestTask.Models.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany()
                        .HasForeignKey("ProcessEquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JuniorDotNet_TestTask.Models.ProductionFacility", "ProductionFacility")
                        .WithMany()
                        .HasForeignKey("ProductionFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });
#pragma warning restore 612, 618
        }
    }
}
